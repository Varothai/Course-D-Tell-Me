model Course {
  id        String   @id
  name      String
  reviews   Review[]
  // Add other course fields as needed
}

model Review {
  id                String    @id @default(cuid())
  courseId          String
  course            Course    @relation(fields: [courseId], references: [id])
  rating            Int
  userName          String
  review            String
  timestamp         DateTime  @default(now())
  likes             Int      @default(0)
  dislikes         Int      @default(0)
  comments          Comment[]
  isBookmarked      Boolean  @default(false)
  readingAmount     Int
  contentDifficulty Int
  teachingQuality   Int
  grade            String
  major            String
  reports           Report[]
  reportCount       Int      @default(0)
  isHidden          Boolean  @default(false)
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  reviewId  String
  review    Review   @relation(fields: [reviewId], references: [id])
  timestamp DateTime @default(now())
}

model Report {
  id           String   @id @default(cuid())
  reviewId     String
  review       Review   @relation(fields: [reviewId], references: [id])
  reporterId   String   // ID of user who reported
  reason       String   // Reason for reporting
  createdAt    DateTime @default(now())

  @@unique([reviewId, reporterId]) // Prevents multiple reports from same user
  @@index([reviewId])
} 